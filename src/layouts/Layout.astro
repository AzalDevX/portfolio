---
import portfolioData from '../data/portfolio.json';
import CursorFollower from '../components/CursorFollower.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';

const { personal } = portfolioData;

export interface Props {
  title?: string;
}

const { title = `${personal.name} - ${personal.title}` } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <link rel="icon" href="/gonzalo_avatar.png" />
    <meta name="description" content={personal.tagline} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@300;400;500&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <CursorFollower />
    <Navbar />
    <slot />
    <Footer />
  </body>
</html>

<style is:global>
  ::selection {
    background: #ddd;
    color: #000;
  }

  :root {
    --lh: 1.5em;
    --mono: 'JetBrains Mono', 'Courier New', monospace;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    font-family: var(--mono);
    font-size: 1em;
    line-height: var(--lh);
    color: #000;
    background: #fff;
    font-weight: 300;
  }

  .container {
    max-width: 900px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .section {
    padding: 8rem 0;
  }

  .section-grid {
    display: grid;
    grid-template-columns: 200px 1fr;
    gap: 4rem;
    align-items: start;
  }

  .section-title {
    color: #999;
    font-size: 0.8em;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    position: sticky;
    top: 8rem;
  }

  .section-content {
    color: #333;
  }

  .section-content p {
    margin-bottom: 2rem;
  }

  .bg-alt {
    background: #fafafa;
  }

  .fade-in {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s ease;
  }

  .fade-in.visible {
    opacity: 1;
    transform: translateY(0);
  }

  @media (max-width: 768px) {
    .container {
      padding: 0 1rem;
    }

    .section-grid {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .section-title {
      position: static;
    }
  }
</style>

<script>
  // Fade in animation on scroll
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px',
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible');
      }
    });
  }, observerOptions);

  // Observe all fade-in elements
  document.querySelectorAll('.fade-in').forEach((el) => {
    observer.observe(el);
  });

  // Smooth scrolling for navigation links
  document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href'));
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start',
        });
      }
    });
  });
</script>
